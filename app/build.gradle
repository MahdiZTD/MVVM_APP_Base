apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion compile_sdk
    defaultConfig {
        applicationId "com.visally.showme"
        minSdkVersion min_sdk
        targetSdkVersion target_sdk
        versionCode version_code
        versionName version_name
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            buildConfigField("String", "BASE_URL", "\"https://api.foursquare.com/\"")
        }
        release {
            minifyEnabled true
            buildConfigField("String", "BASE_URL", "\"https://api.foursquare.com/\"")
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    dataBinding {
        enabled = true
    }
    android{
        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "com.android.support:appcompat-v7:$app_compat"
    implementation "com.android.support.constraint:constraint-layout:$constraint_layout"
    implementation "com.android.support:recyclerview-v7:$recycler_view"
    implementation "com.android.support:support-v4:$app_compat"
    implementation "com.android.support:design:$support_design"

    /**
     * retrofit
     */
    implementation "com.squareup.retrofit2:retrofit:$retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit"
    implementation "com.squareup.okhttp3:logging-interceptor:$retrofit_logger"

    /**
     * room database
     */
    implementation "android.arch.persistence.room:runtime:$room_database"
    kapt "android.arch.persistence.room:compiler:$room_database"

    /**
     * LiveData
     */
    implementation "android.arch.lifecycle:livedata:$live_data"

    /**
     * rxJava and RxAndroid
     */
    implementation "io.reactivex.rxjava2:rxandroid:$rx_android"
    implementation "io.reactivex.rxjava2:rxjava:$rx_java"

    /**
     * fonts
     */
    implementation "uk.co.chrisjenx:calligraphy:$calligoraphy_version"
    implementation "com.github.bumptech.glide:glide:$glide_version"

    /**
     * Dagger
     */
    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    implementation "com.google.dagger:dagger-android:$dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"

    /**
     * logger
     */
    implementation "com.jakewharton.timber:timber:$timber_logger"

    /**
     * parser
     */
    implementation "com.google.code.gson:gson:$gson_version"

    /**
     * lifeCycle
     */
    implementation "android.arch.lifecycle:extensions:$lifecycle"
    annotationProcessor "android.arch.lifecycle:compiler:$lifecycle"


    implementation "com.patloew.rxlocation:rxlocation:$rx_location"
    implementation "com.google.android.gms:play-services-location:$play_services"

    /**
     * Test dependencies
     */
    testImplementation "junit:junit:$junit"
    testImplementation "org.mockito:mockito-core:$mockito"
    androidTestImplementation "com.android.support.test:runner:$test_runner"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$espresso"
}
